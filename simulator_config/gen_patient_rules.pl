#!/usr/bin/perl
#
use strict;

my @SECTIONS = ('ADM','ALL','CLI','ENC','IMM','MED','OBS','PRB','REF','SUM');
#                1           2          3         4           5          6         7          8           9         10         11         12        13         14         15          16        17           18
my @POP=qw(      Y           Y          Y         Y           Y          Y         Y          Y           N          N          Y          Y         Y          N          N           N         N            N);
my @NNN = qw(9476719915 9476719931 9476719974 9476719958 9476719966 9476719923 9476718870 9476718889 9476718897 9476718900 9476718919 9476718927 9476718935 9476718943 9476718951 9000000182 9000000173 9000000181);


print "#\n";
print "# autogenerated from gen_patient_rules.pl\n";
print "#\n";

my $no_patients = scalar(@NNN);

for my $i ( 1..$no_patients ) {
	if ( $ARGV[0] eq 'expression')  {
		print "QUERY_PATIENT$i	xpathmatches /fhir:Parameters/fhir:parameter[fhir:name/\@value='patientNHSNumber']/fhir:valueIdentifier/fhir:value/\@value ^$NNN[$i-1]\$\n";
	}
	elsif ( $POP[$i-1] eq 'Y' ) {
		for my $section (@SECTIONS) {
			if ( $ARGV[0] eq 'rule' ) {
				print "if QUERY_PATIENT$i and QUERY_RS_$section then patient".$i."_response_$section\n";
			} elsif ( $ARGV[0] eq 'response' ) {
				print "patient".$i."_response_$section $ENV{'TKWROOT'}/config/GP_CONNECT/simulator_config/gp_connect_patients/$NNN[$i-1]_$section.xml \"200 OK\"\n";
			} else {
				print "unknown argument\ $ARGV[0]\n";
				exit;
			}	
		}
		print "#\n";
	}
}

